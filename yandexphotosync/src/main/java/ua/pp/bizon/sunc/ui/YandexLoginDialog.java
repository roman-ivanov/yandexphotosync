/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ua.pp.bizon.sunc.ui;

import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.io.IOException;

import javax.swing.AbstractAction;
import javax.swing.ActionMap;
import javax.swing.InputMap;
import javax.swing.JComponent;
import javax.swing.KeyStroke;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;

import ua.pp.bizon.sunc.api.Store;
import ua.pp.bizon.sunc.remote.api.OAuth;
import ua.pp.bizon.sunc.remote.api.OAuthUI;
import ua.pp.bizon.sunc.remote.api.YandexLogin;
import ua.pp.bizon.sunc.remote.impl.BrowserLoader;
import ua.pp.bizon.sunc.remote.impl.RemoteException;

/**
 *
 * @author roman
 */
public class YandexLoginDialog extends javax.swing.JDialog implements OAuthUI {

    private static final long serialVersionUID = -8958707926051081475L;
    
    public static enum ReturnStatus {
        RET_CANCEL,
        RET_OK
    }
    
    @Autowired
    private YandexLogin yandexLogin;
    
    @Autowired 
    private ErrorHandler handler;
    
    @Autowired
    private Store store;

    /**
     * Creates new form YandexLoginDialog
     */
    public YandexLoginDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();

        // Close the dialog when Esc is pressed
        String cancelName = "cancel";
        InputMap inputMap = getRootPane().getInputMap(JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);
        inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0), cancelName);
        ActionMap actionMap = getRootPane().getActionMap();
        actionMap.put(cancelName, new AbstractAction() {
            private static final long serialVersionUID = -3455570847207275255L;

            public void actionPerformed(ActionEvent e) {
                doClose(ReturnStatus.RET_CANCEL);
            }
        });
    }

    /**
     * @return the return status of this dialog - one of RET_OK or RET_CANCEL
     */
    public ReturnStatus getReturnStatus() {
        return returnStatus;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        loginPassPanel = new javax.swing.JPanel();
        loginLabel = new javax.swing.JLabel();
        loginTextField = new javax.swing.JTextField();
        passwordLabel = new javax.swing.JLabel();
        passwordField = new javax.swing.JPasswordField();
        tokenPanel = new javax.swing.JPanel();
        tokenLabel = new javax.swing.JLabel();
        tokenTextField = new javax.swing.JTextField();
        generateButton = new javax.swing.JButton();

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        okButton.setText("OK");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        loginPassPanel.setEnabled(false);

        loginLabel.setText("Login:");

        loginTextField.setEditable(false);

        passwordLabel.setText("Password:");

        passwordField.setEditable(false);

        javax.swing.GroupLayout loginPassPanelLayout = new javax.swing.GroupLayout(loginPassPanel);
        loginPassPanel.setLayout(loginPassPanelLayout);
        loginPassPanelLayout.setHorizontalGroup(
            loginPassPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loginPassPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(loginPassPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(passwordLabel)
                    .addComponent(loginLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(loginPassPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(loginTextField)
                    .addComponent(passwordField, javax.swing.GroupLayout.DEFAULT_SIZE, 416, Short.MAX_VALUE))
                .addContainerGap())
        );
        loginPassPanelLayout.setVerticalGroup(
            loginPassPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loginPassPanelLayout.createSequentialGroup()
                .addGroup(loginPassPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(loginLabel)
                    .addComponent(loginTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(loginPassPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passwordLabel)
                    .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 13, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Input Login", loginPassPanel);

        tokenLabel.setText("Token:");

        generateButton.setText("Generate URL");
        generateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout tokenPanelLayout = new javax.swing.GroupLayout(tokenPanel);
        tokenPanel.setLayout(tokenPanelLayout);
        tokenPanelLayout.setHorizontalGroup(
            tokenPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tokenPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tokenPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(generateButton, javax.swing.GroupLayout.DEFAULT_SIZE, 485, Short.MAX_VALUE)
                    .addGroup(tokenPanelLayout.createSequentialGroup()
                        .addComponent(tokenLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tokenTextField)))
                .addContainerGap())
        );
        tokenPanelLayout.setVerticalGroup(
            tokenPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tokenPanelLayout.createSequentialGroup()
                .addComponent(generateButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(tokenPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tokenLabel)
                    .addComponent(tokenTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Input token", tokenPanel);

        jTabbedPane1.setSelectedIndex(1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(okButton, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cancelButton))
                    .addComponent(jTabbedPane1))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cancelButton, okButton});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelButton)
                    .addComponent(okButton))
                .addContainerGap())
        );

        getRootPane().setDefaultButton(okButton);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        doClose(ReturnStatus.RET_OK);
    }//GEN-LAST:event_okButtonActionPerformed
    
    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        doClose(ReturnStatus.RET_CANCEL);
    }//GEN-LAST:event_cancelButtonActionPerformed

    /**
     * Closes the dialog
     */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        doClose(ReturnStatus.RET_CANCEL);
    }//GEN-LAST:event_closeDialog

    private void generateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateButtonActionPerformed
        String clientId = store.get(OAuth.CLIENT_ID);
        BrowserLoader.openUrl("https://oauth.yandex.ru/authorize?response_type=code&client_id=" + clientId);
    }//GEN-LAST:event_generateButtonActionPerformed
    
    private void doClose(ReturnStatus retStatus) {
        returnStatus = retStatus;
        setVisible(false);
        dispose();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JButton generateButton;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel loginLabel;
    private javax.swing.JPanel loginPassPanel;
    private javax.swing.JTextField loginTextField;
    private javax.swing.JButton okButton;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JLabel passwordLabel;
    private javax.swing.JLabel tokenLabel;
    private javax.swing.JPanel tokenPanel;
    private javax.swing.JTextField tokenTextField;
    // End of variables declaration//GEN-END:variables
    private ReturnStatus returnStatus = ReturnStatus.RET_CANCEL;
    private String token;
    private final Logger logger = LoggerFactory.getLogger(getClass());

    @Override
    public void login(OAuth oAuth) {
        setVisible(true);
        logger.trace("login: returnStatus = " + returnStatus);
        if (returnStatus == ReturnStatus.RET_OK){
            calculateToken();
            oAuth.setToken(token);
        }
        
    }

    protected void calculateToken() {
        logger.trace("calculateToken: jTabbedPane1.getSelectedComponent() = " + jTabbedPane1.getSelectedComponent());        
        if (jTabbedPane1.getSelectedComponent() != null) {
            if (jTabbedPane1.getSelectedIndex() == 0){
                String login = loginTextField.getText();
                String password = new String(passwordField.getPassword());
                try {
                    token = yandexLogin.getOAuthKey(login, password);
                } catch (IOException e) {
                    handler.handle(e);
                }
            } else if (jTabbedPane1.getSelectedIndex() == 1) {
                String token = tokenTextField.getText();
                try {
                    this.token = yandexLogin.getOAuthKey(token);
                } catch (IOException | RemoteException e) {
                    handler.handle(e);
                }
            }
        }
        
    }
}
